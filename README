cpecmu-report 0.2.1
--------------------

This package provides a LaTeX document class for producing senior project
reports at the Deparment of Computer Engineering, Chiang Mai University,
using LaTeX 2e.  You can use a sample report, in "sampleReport.tex", as
a template for writing your report.

To prepare your system for using this document, please install the
following software as prerequisites:
- LaTeX distribution (e.g., MikTeX on Windows; TeXLive on MacOS)
- Perl programming language (e.g., ActiveState Perl on Windows; already
  installed on MacOS)

Afterwards, make sure the following LaTeX packages are installed with your
LaTeX distribution:
- latexmk
- fonts-tlwg
- fonts-arundina
- tex-gyre
- tex-gyre-math
For MikTeX on Windows, these packages can be installed via the following
command:
  miktex packages require latexmk fonts-tlwg fonts-arundina tex-gyre tex-gyre-math

For TeXLive on Unix-based distributions, XeLaTeX will look for fonts in system
installations even if your TeX distribution contains the packages above.
To install these fonts in your system, install the following packages via apt:
- fonts-thai-tlwg-otf
- fonts-arundina
- tex-gyre
- texlive-fonts-extra
This can be done via the following command:
  sudo apt install fonts-thai-tlwg-otf fonts-arundina tex-gyre texlive-fonts-extra

Detailed (albeit still incomplete in places) documentation for
the document class can be found in the file "cpecmu.pdf".
Please read this documentation if you run into any problems, because it
explains how to deal with some common errors.

There are a few ways to build the sample report.  If you have "make" available,
you can type "make" to build the sample report.  The supplied Makefile
can be used as a starting point for building your own report.

The sample report can also be built within Visual Studio Code.
To get started, install the "LaTeX Workshop" extension, then add
the following entry into "settings.json":
    "latex-workshop.latex.tools": [
      {
        "name": "latexmk",
        "command": "latexmk",
        "args": [
          "-pdfxe",
          "-synctex=1",
          "-interaction=nonstopmode",
          "-file-line-error",
          "%DOC%"
        ]
      }
    ]
See
  https://github.com/James-Yu/LaTeX-Workshop/wiki/Compile#latex-recipes
for details.
This extension allows you to view the PDF file within Visual Studio Code.
You can also use SyncTeX to navigate back and forth between
source code and PDF output.  See 
  https://github.com/James-Yu/LaTeX-Workshop/wiki/View
for details.

This template and its related files, including the cpecmu document class,
may be updated from time to time.  To prepare your own report repository for
additoinal changes, first clone this template:
  git clone https://github.com/cpecmu/cpe-project-ex.git
Next, create your own private, empty repository, and retarget the origin remote:
  git remote set-url origin <your-repo-remote-url>
Finally, add a remote to the template repository:
  git remote add template https://github.com/cpecmu/cpe-project-ex.git
Then, to pull template changes, use this command:
  git pull template master
Note that conflicts may occur at this point; you should check for changes to
your own files and perform a merge appropriately before committing.

To avoid changes in the template from interfering with your own report, make a
copy of sampleReport.tex and keep sampleReport.tex unchanged.
  cp sampleReport.tex <your-file-name.tex>
Then, add the following entry into "settings.json", under "settings" key:
    "latex-workshop.latex.search.rootFiles.exclude": ["**/sampleReport.tex"]
